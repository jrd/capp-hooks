#!/usr/bin/env python3
from argparse import ArgumentParser
from pathlib import Path
from yaml import (
    dump,
    full_load,
)


capp_app_container_label = 'capp.app'
capp_environment_container_label = 'capp.environment'


def add_labels(app: str, environment: str, compose_file: Path) -> None:
    with open(compose_file) as f:
        dc = full_load(f)
        for svc_name, svc_def in dc.get('services', {}).items():
            if svc_def:
                labels = svc_def.get('labels', {})
                if isinstance(labels, list):
                    labels = dict(
                        [label.split('=', 1) for label in labels if '=' in label] +
                        [(label, '') for label in labels if '=' not in label]
                    )
                labels[capp_app_container_label] = app
                labels[capp_environment_container_label] = environment
                svc_def['labels'] = labels
                dc['services'][svc_name] = svc_def
    with open(compose_file, 'w') as f:
        dump(dc, f)


if __name__ == "__main__":
    parser = ArgumentParser()
    parser.add_argument("app")
    parser.add_argument("environment")
    parser.add_argument("version", type=float)
    parser.add_argument("compose_file")
    parser.add_argument("target_dir")
    parser.add_argument("remain", nargs='*')
    args = parser.parse_args()
    compose_file = Path(args.compose_file)
    if compose_file.exists():
        add_labels(args.app, args.environment, compose_file)
